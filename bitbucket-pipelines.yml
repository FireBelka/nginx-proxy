# This is an example Starter pipeline configuration
# Use a skeleton to build, test and deploy using manual and parallel steps
# -----
# You can specify a custom docker image from Docker Hub as your build environment.
image: docker:latest

pipelines:
  default:
      - step:
          name: Run docker script
          caches:
            - docker
            - pip
          script:
            - apk add --no-cache py-pip bash
            - pip install --no-cache-dir docker-compose
#            - curl -L https://github.com/docker/compose/releases/download/1.19.0/docker-compose-Linux-x86_64 -o /usr/local/bin/docker-compose
#            - chmod +x /usr/local/bin/docker-compose
            - docker login -u $DOCKER_USER -p $DOCKER_PASSWORD $DOCKER_LOGIN_SERVER
            - docker-compose -f docker-compose.yml build
            - docker-compose -f docker-compose.yml push
          services:
            - docker
#      - step:
#          name: Changing slots
#          image: mcr.microsoft.com/azure-cli
#          script:
#            - az login --service-principal -u $AZURE_APP_ID -p $AZURE_PASSWORD --tenant $AZURE_TENANT_ID
#            - az webapp deployment slot swap  -g 'deploy-from-bitbucket' -n 'apache-web-app-service-bitbucket' --slot staging --target-slot production
